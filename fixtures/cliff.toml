[changelog]
# template for the changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file.
"""
# template for the changelog body
body = """
{% if version %}## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}\n{% else %}## [unreleased]\n{% endif %}

### Breaking Changes
{% for commit in commits %}{% set breaking_changes_exist = false %}{% for footer in commit.footers %}{% if footer.breaking %}- {{ footer.value | upper_first }}\n{% endif %}{% endfor %}{% endfor %}

### Commits
| Commit Hash | Type | Description |
|-------------|------|-------------|
{% for group, grouped_commits in commits | group_by(attribute="group") %}{% for commit in grouped_commits %}{% if commit.body and "BREAKING CHANGE:" in commit.body %}{# Skip breaking change commits from the table #}{% else %}| [{{ commit.id | truncate(length=7) }}](https://github.com/yundabal-test/hello-world/commit/{{ commit.id }}) | {{ group | upper_first }} | {% if commit.scope %}*({{ commit.scope }})* {% endif %}{{ commit.message | upper_first }} |\n{% endif %}{% endfor %}{% endfor %}
"""
# template for the changelog footer
footer = """
"""
# remove the leading and trailing spaces
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
filter_unconventional = true
split_commits = false

# regex for parsing and grouping commits
commit_parsers = [
  { message = "^(feat)", group = "feat" },
  { message = "^(fix)", group = "fix" },
  { message = "^(doc)", group = "doc" },
  { message = "^(perf)", group = "perf" },
  { message = "^(refactor)", group = "refactor" },
  { message = "^(style)", group = "style" },
  { message = "^(test)", group = "test" },
  { message = "^(chore)", group = "chore" },
  { message = "^(ci)", group = "ci" },
  { message = "^revert", group = "revert" },
]

filter_commits = false
sort_commits = "oldest"